nextflow.enable.dsl=2

params {
  // INPUT TEXT FILE CONTAINING FASTQ FILE PATH
  inputfiles = null

  // QC CHECK
  skip_pre_fastqc = false
  skip_post_fastqc  = false

  // UMI EXTRACT 
  skip_umi_extract = false
  bcPattern = 'XNNNNNCX'

 //TRIMMING OF FASTQ files
  skip_fastp = false

  // REFERENCE FILE
  transcript_fasta = null
  genome_fasta = null
  gtf = null
  txp2gene = null

  //REFERENCE INDEX
  star_index = null
  salmon_index = null

  // ALIGNER
  aligner = "star"
  protocol = "droplet"
  //INPUT FOR ALIGNMENT
  whitelist = null
  manifest = null

  outdir = "OutPut"
  help= false
  cpus = 6
  memory = "16.G"
}

profiles {
  debug {
    dumpHashes             = true
    process.beforeScript   = 'echo $HOSTNAME'
    cleanup                = false
    nextflow.enable.configProcessNamesValidation = true
  }
  docker {
    docker.enabled = true
    docker.runOptions = '-u $(id -u):$(id -g)'
  }
  arm {
    docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
  }
  test      { 
    params {
    config_profile_name         = 'Test profile'
    inputfiles                  = "https://github.com/TapanBaral/scRNASEQ_Nextflow/blob/master/assets/sampleInfo.txt"
    aligner                     = 'star' 
    genome_fasta                = 'https://github.com/nf-core/test-datasets/raw/scrnaseq/reference/GRCm38.p6.genome.chr19.fa'
    gtf                         = 'https://github.com/nf-core/test-datasets/raw/scrnaseq/reference/gencode.vM19.annotation.chr19.gtf'
    whitelist                   = 'https://github.com/nf-core/scrnaseq/blob/2.5.1/assets/whitelist/10x_V3_barcode_whitelist.txt.gz'
    protocol                    = 'droplet'
    skip_post_fastqc            = true
    skip_fastp                  = true
    skip_umi_extract            = true
}  }
}

// REPOSITORY
docker.registry = 'quay.io'

params.help_message = """
  Usage: nextflow run TapanBaral/Nextflow_scRNA_seq [--help]
 
Commands:
  1. Sample Information File:                        
     --inputfiles                      A TAB delimited without header file, first column sample name, second column full path to the read1 and 3rd column full path to the read2
  2. QC checks:
     --skip_pre_fastqc                  Skip pre-fastqc                                     [default: false]
     --skip_post_fastqc                 Skip post-fastqc                                    [default: false]

  3. UMI extraction:
     --skip_umi_extract                 Skip UMI extraction                                 [default: false]
     --bcPattern <pattern>              Barcode pattern for UMI extraction  from 3' end     [default: XNNNNNCX]

  4. Trimming of FASTQ files:
     --skip_fastp                       Skip trimming of FASTQ files                        [default: false]

  5. Set reference files:
    --transcriptome <path>             Path to the transcriptome FASTA file (For aligner: salmon)
     --genome_fasta <path>              Path to the genome FASTA file (For aligner: STAR)
     --transcript_gtf <path>            Path to the annotation GTF file
     --txp2gene <path>                  Path to the transcript-to-gene mapping file
     --star_index <path>                Path to STAR index   (Optional)                    
     --salmon_index <path>              Path to Salmon index (Optional) 

  6. Alignment parameters:
     --aligner <name>                   The name of the aligner to use                      [default: star]
     --protocol <name>                  The name of the alignment protocol to use           [default: droplet]
     --whitelist <path>                 Path to the cell barcode whitelist file  
     --manifest <path>                  Path to the sample manifest file

  7. Run parameters:
     --outdir <path>                    Output directory                                    [default: OutPut]
     --cpus <number>                    Number of CPUs to use                               [default: 6]
     --memory <size>                    Amount of memory to use                             [default: 16g]
"""

// Export these variables to prevent local Python/R libraries from conflicting with those in the containe
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process {
    executor = 'slurm'
    // Other process configuration options

    shell = ['/bin/bash', '-euo', 'pipefail']
    beforeScript = """
        chmod +x ${baseDir}/bin/*.R
    """
}


// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

cleanup = true